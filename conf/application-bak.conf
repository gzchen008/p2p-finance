# ~~~~~
application.name=com.shovesoft.sp2p

# Application mode
# ~~~~~
# Set to dev to enable instant reloading and other development help.
# Otherwise set to prod.
application.mode=dev
%local.application.mode=dev
%dev.application.mode=prod
%test.application.mode=prod
%prod.application.mode=prod

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions
# If you deploy your application to several instances be sure to use the same key !
# play自生成加密串。
application.secret=6zOGEZ2RDtnqxCVuwvZSuT5gqDy3UTHWRJGvAIKKiPsFBVkRyN3krjzdtiQ1bzxjcHOewZjdaEjUaqULSW56QWeiJd2SsJjiS8cu65VOdPAdzV22D4Y4uqJ5dgKIXHlG
# 系统加密串，每个项目请独立生成。
fixed.secret=Xco1tY5CDlhh5qFCDKb1uuKB42RmSk4u
# APP连接PC的加密串。
app.fixed.secret=eiVFACtNeIYY5O9HZO0iKHGhaQPp3cFD
# 数据库备份文件路径
sql.path=/home/backup-file-mysql/
# i18n
# ~~~~~
# Define locales used by your application.
# You can then place localized messages in conf/messages.{locale} files
# application.langs=fr,en,ja
#fp url that for agreement with fp
fp.agreement.url=/core/agreement/findlinkbycode
#fp url that for registering with fp
fp.register.url=/core/register
#fp url that for loading with fp
fp.login.url=/customer/login
#fp url that for resetpwd with fp
fp.resetpwd.url=/customer/resetpwd
#fp url that for give register bean with fp
fp.give.register.bean.url=/account/activity/register
fp.authentication.url = /customer/authentication
fp.activity.imag.url=/account/activity/list
fp.binding.social.url=/customer/bingingsocial
fp.find.social.url=/customer/findsocial


fp.host.uri=http://adams.dev:9002
%local.fp.host.uri=http://adams.dev:9002
%dev.fp.host.uri=http://adams.dev:9002
%test.fp.host.uri=https://api-2.sunlights.me/api

# 访问域名，请勿在后面加上 “/”，即  http://p2pv2.sunlights.me/（错误的，因为在末尾加了“/”）
application.baseUrl=http://taylor.dev:8080
%local.application.baseUrl=http://localhost:9000
%dev.application.baseUrl=http://taylor.dev:8080
%test.application.baseUrl=http://p2pv2.sunlights.me
# %prod.application.baseUrl=http://www.yourdomain.com/

static.host=https://api-2.sunlights.me
%local.static.host=https://api-2.sunlights.me
%dev.static.host=https://api-2.sunlights.me
%test.static.host=https://api-2.sunlights.me

wechat_appId=wx39bcc008d0e338b0
wechat_appsecret=4387de1a21817480508b18a26f6e2a29
wechat_callback_url=mobile/weixin/weChatCB
mch_id=1247406401
redpacket_apply_name=上海展义金融
send_name=加薪猫理财
wishing=喵 喵 红包来咯
wechat_key=ilovejiaxinmao1234ilovejiaxinmao
#check if the bids need filter(prd need be true)
is.bids.need.filter =false
#this is the mobile who create bid
bids.mobile =18321718279
#the filter time(if the bids create later than this time ,it will display in )
bids.createTime =2015-04-27 00:00:00
#the active apr
bids.active.apr =1.0
#the supervisor's mail address
supervisor.mail =services.bids@51jdj.com




#SMS proxy
sms.proxy=10.168.44.141
# Date format
# ~~~~~
date.format=yyyy-MM-dd
# date.format.fr=dd/MM/yyyy

# Server configuration
# ~~~~~
# If you need to change the HTTP port, uncomment this (default is set to 9000)
 http.port=9000
#
# By default the server listen for HTTP on the wilcard address.
# You can restrict this.
# http.address=127.0.0.1
#
# Use this if you don't host your Play application at the root of the domain
# you're serving it from. This parameter has no effect when deployed as a
# war, because the path will be handled by the application server.
# 自定义项目路径配置，如果没有写请至为空
 http.path=

# Session configuration
# ~~~~~~~~~~~~~~~~~~~~~~
# By default, session will be written to the transient PLAY_SESSION cookie.
# The cookies are not secured by default, only set it to true
# if you're serving your pages through https.
 application.session.cookie=SP2P
# application.session.maxAge=1h
# application.session.secure=false
  application.session.httpOnly=true

# Session/Cookie sharing between subdomain
# ~~~~~~~~~~~~~~~~~~~~~~
# By default a cookie is only valid for a specific domain. By setting
# application.defaultCookieDomain to '.example.com', the cookies
# will be valid for all domains ending with '.example.com', ie:
# foo.example.com and bar.example.com
# application.defaultCookieDomain=.example.com

# JVM configuration
#jvm.memory=-Xms1024m -Xmx2048m
# ~~~~~
# Define which port is used by JPDA when application is in debug mode (default is set to 8000)
# jpda.port=8000
#
# Java source level => 1.5, 1.6 or 1.7 (experimental)
# java.source=1.5

# Log level
# ~~~~~
# Specify log level for your application.
# If you want a very customized log, create a log4j.properties file in the conf directory
application.log=INFO
#
# More logging configuration
application.log.path=/log4j.properties
#application.log.system.out=off

# Database configuration
# ~~~~~ 
# Enable a database engine if needed.
#
# To quickly set up a development database, use either:
#   - mem : for a transient in memory database (H2 in memory)
#   - fs  : for a simple file written database (H2 file stored)
# db=mem
#
#db=shove-dbpnx9C00MM0PRLrUowojld/gMJwhaEWRAlmqQTpyL4nfyNSAeSho5VdY7/hGBi+ZosiE2CxECO0DdKL4ei9b0ZvF8IghPPCcByznYBfj4lwWcU1JnRhAmXg==
db=mysql://root:root@localhost/dev_sp2p
%local.db=mysql://xfp2p_dev_user:xfp2p_dev_user@jefferson.dev/db_xfp2p_dev
%dev.db=mysql://xfp2p_dev_user:xfp2p_dev_user@jefferson.dev/db_xfp2p_dev
%test.db=mysql://user_dev:userdev-@y2internal.mysql.rds.aliyuncs.com/p2p_dev
# To connect to a local PostgreSQL9 database, use:
# db=postgres://user:pwd@host/database
#
# If you need a full JDBC configuration use the following :
#db.url=jdbc:postgresql:dev_sp2p
#db.driver=org.postgresql.Driver
#db.user=root
#db.pass=root

#
# Connections pool configuration :
db.pool.maxSize=100
db.pool.minSize=5
db.pool.maxIdleTimeExcessConnections=120
#
# If you want to reuse an existing Datasource from your application server, use:
# db=java:/comp/env/jdbc/myDatasource
#
# When using an existing Datasource, it's sometimes needed to destroy it when
# the application is stopped. Depending on the datasource, you can define a
# generic "destroy" method :
# db.destroyMethod=close

# JPA Configuration (Hibernate)
# ~~~~~
#
# Specify the custom JPA dialect to use here (default to guess):
# jpa.dialect=org.hibernate.dialect.PostgreSQLDialect
#
# Specify the ddl generation pattern to use. Set to none to disable it 
# (default to update in DEV mode, and none in PROD mode):
jpa.ddl=none
#
# Debug SQL statements (logged using DEBUG level):
# jpa.debugSQL=true
#
# You can even specify additional hibernate properties here:
# hibernate.use_sql_comments=true
# ...
#
# Store path for Blob content
# 上传资源路径
attachments.path=data/attachments

# Memcached configuration
# ~~~~~ 
# Enable memcached if needed. Otherwise a local cache is used.
# memcached=enabled
#
# Specify memcached host (default to 127.0.0.1:11211)
# memcached.host=172.16.1.158:11211
#
# Or you can specify multiple host to build a distributed cache
# memcached.1.host=127.0.0.1:11211
# memcached.2.host=127.0.0.1:11212
#
# Use plain SASL to authenticate for memcached
# memcached.user=
# memcached.password=

# HTTP Response headers control for static files
# ~~~~~
# Set the default max-age, telling the user's browser how long it should cache the page.
# Default is 3600 (one hour). Set it to 0 to send no-cache.
# This is only read in prod mode, in dev mode the cache is disabled.
# http.cacheControl=3600

# If enabled, Play will generate entity tags automatically and send a 304 when needed.
# Default is true, set it to false to deactivate use of entity tags.
# http.useETag=true

# Custom mime types
# mimetype.xpi=application/x-xpinstall

# WS configuration
# ~~~~~
# Default engine is Async Http Client, uncomment to use
# the JDK's internal implementation
# webservice = urlfetch
# If you need to set proxy params for WS requests
# http.proxyHost = localhost
# http.proxyPort = 3128
# http.proxyUser = jojo
# http.proxyPassword = jojo

# Mail configuration
# ~~~~~ 
# Default is to use a mock Mailer
#mail.smtp=mock

# Or, specify mail host configuration
 mail.smtp.host=mail.eims.com.cn
 mail.smtp.user=chenpi@eims.com.cn
 mail.smtp.pass=123
 mail.smtp.channel=clear

# Url-resolving in Jobs
# ~~~~~~
# When rendering templates with reverse-url-resoling (@@{..}) in Jobs (which do not have an inbound Http.Request),
# ie if sending a HtmlMail, Play need to know which url your users use when accessing your app.
# Jobs executor
# ~~~~~~
# Size of the Jobs pool
# play.jobs.pool=10

# Execution pool
# ~~~~~
# Default to 1 thread in DEV mode or (nb processors + 1) threads in PROD mode.
# Try to keep a low as possible. 1 thread will serialize all requests (very useful for debugging purpose)
# play.pool=3

# Open file from errors pages
# ~~~~~
# If your text editor supports opening files by URL, Play! will
# dynamically link error pages to files 
#
# Example, for textmate:
# play.editor=txmt://open?url=file://%s&line=%s

# Testing. Set up a custom configuration for test mode
# ~~~~~
#%test.module.cobertura=${play.path}/modules/cobertura
#%test.application.mode=prod
#%test.db.url=jdbc:h2:mem:play;MODE=MYSQL;LOCK_MODE=0
#%test.jpa.ddl=null
#%test.mail.smtp=mock
#%test.jpa.debugSQL=true

# 以下内容，请增加到 play 框架项目的 application.conf 中

# 是否启动拦截器，default is true
 injectionInterceptor=true
# 截获到注入等风险后，转跳到的目标 url
# injectionInterceptor.alert.url=

# 各 Controller 的例外级别，0-最严格；1-严格；2-直接放行，default is 0. 例如：
# SupervisorBidManage=2
# UserQuery=1

# SupervisorBidManage、UserQuery 为需要配置例外的控制器的类名。不配置的则为 0，为最严格规则。
# 控制器的第一个方法请 Copy 如下代码：

#	@Before
#	private static void injectionInterceptor() throws Exception {
#		new com.shove.web.security.InjectionInterceptor().run();
#	}

#	这个方法返回一个字符串，可以对串的值进行判断，如果返回 null, 说明是 ajax 请求，如果是 ""，则说明无拦截到内容，如果有内容，则是拦截到的内容提示。

#支付运营模式(资金托管／普通网关)
pay.trustFunds=true
pay.domain=127.0.0.1
#pay.domain=127.0.0.1
#pay.domain=loanp478
pay.action=http://taylor.dev:8080/spay/payment/spay
%local.pay.action=http://localhost:9001/payment/spay
%dev.pay.action=http://taylor.dev:8080/spay/payment/spay
%test.pay.action=http://p2pv2.sunlights.me/spay/payment/spay
#pay.action=http://127.0.0.1:9001/payment/spay
pay.callback.url=http://taylor.dev:8080/front/PaymentAction/
%local.pay.callback.url=http://localhost:9000/front/PaymentAction/
%dev.pay.callback.url=http://taylor.dev:8080/front/PaymentAction/
%test.pay.callback.url=http://p2pv2.sunlights.me/front/PaymentAction/


pay.mer_no=808801
pay.mer_name=环迅
pay.mer_ident_no=410621198406155011
pay.guarantor_code=708801
pay.guarantor_name=担保机构公司
# 是否需要发短信(针对环迅)
createBid_isMsg=false
# 是否限制总逾期费为总利息的 ? 倍
is_stint_of=false
# 如果限制，限制为多少倍
of_amount=2.5
# 限制时间内的提款时间（单位：天）
withdrawal_day=2
# 杂费支付方式配置 1:平台内部进行转账 2:通过独立普通网关 3:通过共享资金托管账户网关 4:资金托管网关
# vip支付方式
pay.type.vip=4
# 资料审核费支付方式
pay.type.item=4
# 投标奖励支付方式
pay.type.invest=4
# 投标奖励发放方式
pay.type.fund=4
# 资料审核不通过，审核费退回方式
pay.type.item.refund=4
# 投标奖励退回方式
pay.type.refund=4
# CPS发放方式
pay.type.cps=4

#环迅支付
#ipsURL=https://pay.ips.net.cn/ipayment.aspx
ipsURL=http://pay.ips.net.cn/ipayment.aspx
ips_merchant_url=front/account/callback
ips_server_url=front/account/callbackSys

#国付宝支付(https://www.gopay.com.cn/PGServer/Trans/WebClientAction.do 旧的线上地址只适用于老的商户号) 
#go_url=https://gateway.gopay.com.cn/Trans/WebClientAction.do 
go_url=https://mertest.gopay.com.cn/PGServer/Trans/WebClientAction.do
gopay_server_time_url=https://gateway.gopay.com.cn/time.do 
go_mer_url=front/account/gCallback
go_mer_back_url=front/account/gCallbackSys

#晓风支付
spay_url=https://www.gopay.com.cn/PGServer/Trans/WebClientAction.do
spay_merchant_url=http://taylor.dev:8080/account/gCallback
%local.spay_merchant_url=http://localhost:9000/front/account/gCallback
%dev.spay_merchant_url=http://taylor.dev:8080/front/account/gCallback
%test.spay_merchant_url=http://p2pv2.sunlights.me/front/account/gCallback

# QQ快速登录
authorizationURL_QQ=https://graph.qq.com/oauth2.0/authorize
accessTokenURL_QQ=https://graph.qq.com/oauth2.0/token
clientid_QQ=
secret_QQ=
responseType_QQ=code
getUserINFOURL_QQ=https://graph.qq.com/user/get_user_info
getOpenIDURL_QQ=https://graph.qq.com/oauth2.0/me
# 微博快速登录
authorizationURL_WB=https://api.weibo.com/oauth2/authorize
accessTokenURL_WB=https://api.weibo.com/oauth2/access_token
clientid_WB=
secret_WB=
responseType_WB=code
getUserINFOURL_WB=https://api.weibo.com/2/users/show.json

#不同支付平台差异性融合 开始       true表示支持 false表示支持  根据实际接口情况配置--------
#是否有债权转让 true表示支持 false表示支持  根据实际接口情况配置
debt.use=true
#是否支持债权二次转让 true表示支持 false表示支持  根据实际接口情况配置
is.debt.two=false
#支付接口是否需要登陆 true表示需要登陆 false表示不需要登陆  根据实际接口情况配置
is.login=true
#提现后待审核 true表示需要审核 false表示不需要  根据实际接口情况配置
is.withdrawal.audit=false
#是否支持提现内扣  环讯配false,其他true
is.withdrawal.inner=false
#是否有秒还标 true表示支持秒还标 false表示不支持  根据实际接口情况配置
is.second.bid=false
#是否有自动流标 true表示支持自动流标 false表示不支持自动  根据实际接口情况配置
is.flow.bid=true
#是否登记担保方 true表示支持登记担保方 false表示不支持登记担保方  根据实际接口情况配置
is.guarantor=false
#是否支持本金垫付、线下收款方  根据实际接口情况配置
is.offlineReceive=true
#不同支付平台差异性融合  结束--------

#百度云推送参数
api_key=0RKGUFPs6ZAfzumlvcIkuRuP
secret_key=WnSAWzMNt8QOpePmnUGFmH3lsPBRlzyd

#app user-agent
app.agent.names=jindoujialicai;jiaxinmao



